<?php
# This file was automatically generated by the MediaWiki 1.39.6
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See docs/Configuration.md for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

$wikis = [
	"orangejuice.wiki" => "orangejuice_wiki",
	"ja.orangejuice.wiki" => "orangejuice_ja_wiki",
	"twewy.wiki" => "twewy_wiki",
	"tardis.wiki" => "tardis_wiki",
	"jenny-everywhere.wikifederation.org" => "jennyeverywhere_wiki",
	"hub_wiki.wikifederation.org" => "wf_hub_wiki"
];

if (defined('MW_DB')) {
    // Automatically set from --wiki option to maintenance scripts.
    $wiki_ID = MW_DB;
}
else {
    // Use MW_DB environment variable or map the domain name
    $serverName = $_SERVER['SERVER_NAME'] ?? '';
    
    // Redirect to base domain if no subdomain or only base domain is accessed
    //if ($serverName === 'twewy.wiki' || strpos($serverName, '.twewy.wiki') === false) {
        //header('Location: https://www.twewy.wiki');
        //exit;
    //}

   $wiki_ID = $_SERVER['MW_DB'] ?? $wikis[$serverName] ?? null;
}

switch ($wiki_ID) {
    case 'orangejuice_wiki':
        require_once 'LocalSettings_100OrangeJuice.php';
        break;
    case 'orangejuice_ja_wiki':
        require_once 'LocalSettings_100OrangeJuice-ja.php';
        break;
    case 'tardis_wiki':
        require_once 'LocalSettings_Tardis.php';
        break;
    case 'twewy_wiki':
        require_once 'LocalSettings_Twewy.php';
        break;
    case 'wf_hub_wiki':
        require_once 'LocalSettings_WFHub.php';
        break;
    case 'jennyeverywhere_wiki':
        require_once 'LocalSettings_JennyEverywhere.php';
        break;
    default:

        if (http_response_code(403)) {
            $forbiddenerror_page = '/var/www/html/errors/403error.html';
            if (file_exists($forbiddenerror_page )) {
                readfile($forbiddenerror_page );
            }
        }

        if (http_response_code(404)) {
            $unknownerror_page = '/var/www/html/errors/404error.html';
            if (file_exists($unknownerror_page )) {
                readfile($unknownerror_page );
            }
        }

		if (http_response_code(500)) {
            $unknownerror_page = '/var/www/html/errors/500error.html';
            if (file_exists($unknownerror_page )) {
                readfile($unknownerror_page );
            }
        }

        exit;
}


require_once "/srv/Confidential.php";
